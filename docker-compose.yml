version: "3.7"

services:
  db:
    container_name: db
    image: postgres:11.3
    environment:
      - POSTGRES_USER=${DATABASE_USER:-baserow}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-baserow}
      - POSTGRES_DB=${DATABASE_NAME:-baserow}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      local:
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:6.0
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      local:

  mjml:
    container_name: mjml
    image: liminspace/mjml-tcpserver:0.10
    ports:
      - "${MJML_PORT:-28101}:28101"
    networks:
      local:

  backend:
    container_name: backend
    build:
      context: ./backend/
    image: baserow_backend:latest
    environment:
      - DONT_MIGRATE
      - CURRENT_UID
      - CURRENT_GID
      - DATABASE_USER=${DATABASE_USER:-baserow}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-baserow}
      - DATABASE_NAME=${DATABASE_NAME:-baserow}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      - db
      - mjml
    init: true
    networks:
      local:

  celery:
    container_name: celery
    image: baserow_backend:latest
    environment:
      - CURRENT_UID
      - CURRENT_GID
    command: celery
    init: true
    depends_on:
      - backend
    networks:
      local:

  web-frontend:
    container_name: web-frontend
    build:
      context: ./web-frontend/
    image: baserow_web-frontend:latest
    environment:
      - CURRENT_UID
      - CURRENT_GID
    ports:
      - "${WEB_FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    init: true
    networks:
      local:

networks:
  local:
    driver: bridge
