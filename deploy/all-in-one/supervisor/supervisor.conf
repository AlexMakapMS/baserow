[supervisord]
# The supervisord process needs to remain as root so it can change user to the
# individual process users below.
user = root
nodaemon = true
logfile=/dev/stdout
logfile_maxbytes=0
environment =

[include]
files = /baserow/supervisor/includes/enabled/*.conf

[program:caddy]
user=%(ENV_DOCKER_USER)s
directory=%(ENV_DATA_DIR)s/caddy
command=/baserow/supervisor/wrapper.sh CADDY /usr/bin/caddy run --resume --config "/baserow/caddy/Caddyfile"
autostart=true
startsecs=10
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
priority=0
environment= XDG_CONFIG_HOME=%(ENV_DATA_DIR)s/caddy/config, XDG_DATA_HOME=%(ENV_DATA_DIR)s/caddy/data
startretries=3
startsecs=30

[program:webfrontend]
user=%(ENV_DOCKER_USER)s
directory=/baserow/web-frontend
command=/baserow/supervisor/wrapper.sh WEBFRONTEND ./docker/docker-entrypoint.sh nuxt-local
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=10
startretries=3
startsecs=30

[program:backend]
user=%(ENV_DOCKER_USER)s
directory=/baserow/backend
command=/baserow/supervisor/wrapper.sh BACKEND ./docker/docker-entrypoint.sh gunicorn
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=2
startretries=3
startsecs=30

[program:celeryworker]
user=%(ENV_DOCKER_USER)s
directory=/baserow/backend
command=/baserow/supervisor/wrapper.sh CELERY_WORKER ./docker/docker-entrypoint.sh celery-worker
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=2
startretries=3
startsecs=30

[program:exportworker]
user=%(ENV_DOCKER_USER)s
directory=/baserow/backend
command=/baserow/supervisor/wrapper.sh EXPORT_WORKER ./docker/docker-entrypoint.sh celery-exportworker
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=2
startretries=3
startsecs=30

[program:beatworker]
user=%(ENV_DOCKER_USER)s
directory=/baserow/backend
command=/baserow/supervisor/wrapper.sh BEAT_WORKER ./docker/docker-entrypoint.sh celery-beat
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=2
startretries=3
startsecs=30

[program:baserow-watcher]
user=%(ENV_DOCKER_USER)s
command=/baserow/supervisor/wrapper.sh BASEROW-WATCHER /baserow/supervisor/baserow-watcher.sh
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=0

# If an application crashes during runtime we want the entire container to die.
[eventlistener:processes]
command=/baserow/supervisor/stop-supervisor.sh
events=PROCESS_STATE_STOPPED,PROCESS_STATE_EXITED,PROCESS_STATE_FATAL
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
